;; --------------------------------------------------
;; {{top/ns}}.{{main/ns}}.api.scoreboard
;;
;; Example route and handler function
;; using clojure.spec response validation
;; --------------------------------------------------


(ns {{top/ns}}.{{main/ns}}.api.scoreboard
  "Gameboard API Scoreboard across all games"
  (:require
   [ring.util.response :refer [response]]
   [{{top/ns}}.{{main/ns}}.spec]))


;; --------------------------------------------------
;; Mock scores for the Gameboard service

(def scores
  "Simple status report for external monitoring services, e.g. Pingdom
  Return:
  - `constantly` returns an anonymous function that returns a ring response hash-map"
  (constantly (response {:scoreboard [{:game-id "347938472938439487492"
                                       :game-name "Polymous"
                                       :high-score "344398799666"}]})))
;; --------------------------------------------------


;; --------------------------------------------------
;; Routes

(defn routes
  "Reitit route configuration for scoreboard endpoints
  Responses validated with {{top/ns}}.{{main/ns}}.spec clojure.spec"
  [system-config]
  ["/scoreboard"
   {:swagger {:tags ["Scoreboard Endpoints"]}
    :get {:summary "Scoreboard across all games"
          :description "Return all the high scores for every game registered"
          :handler scores
          :responses
          {200
           {:body :{{top/ns}}.{{main/ns}}.spec/scoreboard}}}}])
;; --------------------------------------------------
